import hsl2rgb from '../src/hsl2rgb';
import test from 'ava';

test('convert rgb to hsl', t => {
  t.deepEqual(hsl2rgb([0, 0, 0]), [0, 0, 0]);
  t.deepEqual(hsl2rgb([0, 0, 25]), [64, 64, 64]);
  t.deepEqual(hsl2rgb([0, 0, 50]), [128, 128, 128]);
  t.deepEqual(hsl2rgb([0, 0, 75]), [191, 191, 191]);
  t.deepEqual(hsl2rgb([0, 0, 100]), [255, 255, 255]);
  t.deepEqual(hsl2rgb([0, 25, 50]), [159, 96, 96]);
  t.deepEqual(hsl2rgb([0, 50, 50]), [191, 64, 64]);
  t.deepEqual(hsl2rgb([0, 75, 50]), [223, 32, 32]);
  t.deepEqual(hsl2rgb([0, 100, 50]), [255, 0, 0]);
  t.deepEqual(hsl2rgb([30, 100, 50]), [255, 128, 0]);
  t.deepEqual(hsl2rgb([60, 100, 25]), [128, 128, 0]);
  t.deepEqual(hsl2rgb([60, 100, 50]), [255, 255, 0]);
  t.deepEqual(hsl2rgb([60, 100, 75]), [255, 255, 128]);
  t.deepEqual(hsl2rgb([90, 100, 50]), [128, 255, 0]);
  t.deepEqual(hsl2rgb([120, 100, 25]), [0, 128, 0]);
  t.deepEqual(hsl2rgb([120, 100, 50]), [0, 255, 0]);
  t.deepEqual(hsl2rgb([120, 100, 75]), [128, 255, 128]);
  t.deepEqual(hsl2rgb([150, 100, 50]), [0, 255, 128]);
  t.deepEqual(hsl2rgb([180, 100, 25]), [0, 128, 128]);
  t.deepEqual(hsl2rgb([180, 100, 50]), [0, 255, 255]);
  t.deepEqual(hsl2rgb([180, 100, 75]), [128, 255, 255]);
  t.deepEqual(hsl2rgb([210, 100, 50]), [0, 128, 255]);
  t.deepEqual(hsl2rgb([240, 100, 25]), [0, 0, 128]);
  t.deepEqual(hsl2rgb([240, 100, 50]), [0, 0, 255]);
  t.deepEqual(hsl2rgb([240, 100, 75]), [128, 128, 255]);
  t.deepEqual(hsl2rgb([270, 100, 50]), [128, 0, 255]);
  t.deepEqual(hsl2rgb([300, 100, 25]), [128, 0, 128]);
  t.deepEqual(hsl2rgb([300, 100, 50]), [255, 0, 255]);
  t.deepEqual(hsl2rgb([300, 100, 75]), [255, 128, 255]);
  t.deepEqual(hsl2rgb([330, 100, 50]), [255, 0, 128]);
});
